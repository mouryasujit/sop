.model small
.data  
msg DB 10,13,"Largest no. is : $" 

array dw 1000H,1234H,2030H,4050H,0020H
largeno dw 0
.code
.startup
mov ah,09h
lea dx,msg
int 21h


mov ax,@data
mov ds,ax
mov cx,05
mov si,offset array
mov ax,[si]
dec cx
up:inc si
inc si
cmp ax,[si]
jnc next
mov ax,[si]
next:
loop up
mov largeno,ax
MOV BX,largeno
AND BH, 0F0H
MOV CL,4
SHR BH, CL
ADD BH, 30H
MOV DL, BH
MOV AH,02
INT 21H    
MOV BX, largeno
AND BH, 0FH
ADD BH, 30H
MOV DL, BH
MOV AH,02
INT 21H
MOV BX,largeno

AND BL,0F0H

MOV CL,4

SHR BL, CL 
ADD BL, 30H

MOV DL, BL

MOV AH,02

INT 21H

MOV BX,largeno

AND BL, 0FH   
ADD BL,30H
MOV DL,BL
MOV AH,02
INT 21H

mov ah,4ch
int 21h
ends 
end

-----------------------------------explanation-------------------------
.model small
.data
msg DB 10,13,"Largest no. is : $"  ; Message to display the largest number
array DW 1000H,1234H,2030H,4050H,0020H ; Array of 16-bit numbers
largeno DW 0                          ; Variable to store the largest number
.code
.startup
mov ah, 09h
lea dx, msg
int 21h

mov ax, @data
mov ds, ax
mov cx, 05          ; Number of elements in the array
mov si, offset array
mov ax, [si]        ; Load the first number from the array into AX
dec cx              ; Decrement the loop counter
up:
inc si              ; Move to the next element in the array
inc si
cmp ax, [si]        ; Compare the current element with the largest number found so far
jnc next            ; If not less, continue to the next element
mov ax, [si]        ; If the current element is larger, update the largest number
next:
loop up

mov largeno, ax     ; Store the largest number in the "largeno" variable

; The following block of code converts the largest number to decimal and displays it
MOV BX, largeno
AND BH, 0F0H        ; Clear the lower 4 bits of BH
MOV CL, 4           ; Set the count for bit shifting
SHR BH, CL          ; Shift the high 4 bits of BH to the lower 4 bits
ADD BH, 30H         ; Convert BH to ASCII for the first decimal digit
MOV DL, BH          ; Move the ASCII digit to DL
MOV AH, 02H         ; DOS function code to display a character
INT 21H             ; Invoke DOS interrupt to display the character

MOV BX, largeno
AND BH, 0FH         ; Clear the upper 4 bits of BH
ADD BH, 30H         ; Convert BH to ASCII for the second decimal digit
MOV DL, BH
MOV AH, 02H
INT 21H

MOV BX, largeno
AND BL, 0F0H        ; Clear the lower 4 bits of BL
MOV CL, 4           ; Set the count for bit shifting
SHR BL, CL          ; Shift the high 4 bits of BL to the lower 4 bits
ADD BL, 30H         ; Convert BL to ASCII for the third decimal digit
MOV DL, BL
MOV AH, 02H
INT 21H

MOV BX, largeno
AND BL, 0FH         ; Clear the upper 4 bits of BL
ADD BL, 30H         ; Convert BL to ASCII for the fourth decimal digit
MOV DL, BL
MOV AH, 02H
INT 21H

mov ah, 4ch          ; DOS function code to exit the program
int 21h
Example with the given array:

The array contains five 16-bit values: 1000H, 1234H, 2030H, 4050H, and 0020H.

The program starts and displays "Largest no. is : ".

It initializes the loop counter cx to 5 and points si to the beginning of the array.

It loads the first element (1000H) into ax and decrements the loop counter.

The program enters a loop to compare each element in the array with the largest number found so far (initialized as 1000H).

It compares the next element (1234H) with the largest number (1000H) and updates the largest number to 1234H.

The loop continues to compare the remaining elements and eventually finds the largest number, which is 4050H.

The program then converts and displays the largest number as both hexadecimal (4050H) and decimal (16320).

Finally, the program exits.

So, the program finds the largest number in the array and displays it in both hexadecimal and decimal formats.
